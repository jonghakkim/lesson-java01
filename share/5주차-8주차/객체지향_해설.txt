[1] 다음과 같은 멤버변수를 갖는 SutdaCard 클래스를 정의하시오.

class SutdaCard {
	private int num;
	private boolean isKwang;
	
  public SutdaCard () { 
    //this(1, true); // 없어도 된다. 없으면 컴파일러가 자동으로 super() 붙인다.
                     // 생성자는 객체를 초기화하는 기능을 한다. 되도록 초기화 하는 코드를 넣어라.
  }
      
  public SutdaCard(int num, boolean isKwang) {
    //super(); //  없어도 된다. 없으면 컴파일러가 자동으로 붙인다.
    this.num = num;
    this.isKwang = isKwang;
  }
  
	public int getNum() {
		return this.num;
	}
	
	public void setNum(int num) {
		this.num = num;
	}
	
	public boolean isKwang() {
    return isKwang;
  }
  
  public void setKwang(boolean isKwang) {
    this.isKwang = isKwang;
  }    
}



[2] 두 점의 거리를 계산하는 getDistance() 를 완성하시오.

두 점 와 의 거리를 구하는 공식은 square root{ (x, y)^2 + (x1, y1)^2 }


/* instance 메서드 사용
 *
 */
class MyPoint {
  int x; // 인스턴스 변수
	int y; // 인스턴스 변수
	
	MyPoint(int x, int y) {
		this.x = x;
		this.y = y;
	}
	
	// 두 점 (x,y)와 (x1,y1)간의 거리를 구한다
	double getDistance(int x1, int y1) {
		return Math.sqrt((x-x1)*(x-x1) + (y-y1)*(y-y1)); // x, y는 인스턴스 변수
	}	
}


class Exercise6_7 {
	public static void main(String args[]) {
		MyPoint p = new MyPoint(1,1);
		
		// p 와 (2,2) 의 거리를 구한다
		System.out.println(p.getDistance(2,2));
	}
}

/* static 메서드 사용
 *
 */
class Exercise6_6 {
	// 두 점 (x,y)와 (x1,y1)간의 거리를 구한다
	static double getDistance(int x, int y, int x1, int y1) {
		return Math.sqrt((x-x1)*(x-x1) + (y-y1)*(y-y1)); // x, y는 지역변수
	}
	
	public static void main(String args[]) {
		System.out.println(getDistance(1,1,2,2));
	}
}



[3] 다음은 컴퓨터 게임의 병사 (marine)를 클래스로 정의한 것이다. 
    이 클래스의 멤버 중에 static을 붙여야 하는 것은 어떤 것들이고 그 이유는 무엇인가?
    (단, 모든 병사의 공격력과 방어력은 동일한다.)
    
weapon, armor - 모든 Marine 인스턴스에 대해 동일한 값이어야 하므로
weaponUp(), armorUp() - static변수에 대한 작업을 하는 메서드이므로



[4] 다음중 인스턴스 변수의 초기화 순서가 올바른 것은?

a. 기본값 - 명시적초기화 - 초기화블럭  - 생성자


[5] 다음 코드의 실행 결과를 예측하여 적으시오.

문자열은 내용을 변경할 수 없기 때문에 
덧셈연산을 하면 새로운 문자열이 생성되고 참조주소가 바뀐다.
따라서, 필드명은 동일해도 값은 다르다. 
로컬변수는 메서드 실행이 끝나면 메모리에서 제거된다.

ABC123
After change:ABC123



[6] 다음과 같이 정의된 메서드를 작성하고 테스트하시오.

class Exercise6_23{
	public static int max(int[] arr) {
		if(arr==null || arr.length==0)
			return -999999;
		
		int max = arr[0]; // 배열의 첫 번째 값으로 최대값을 초기화 한다
		
		for(int i=1; i< arr.length;i++) { // 배열의 두 번째 값부터 비교한다
		
			if(arr[i] > max)
				max = arr[i];
		}
		
		return max;
	}
	
	public static void main(String[] args)
	{
		int[] data = {3,2,9,4,7};
		
		System.out.println(java.util.Arrays.toString(data));
		System.out.println(" :"+max(data)); 최대값
		System.out.println(" :"+max(null)); 최대값
		System.out.println(" :"+max(new int[]{})); // 0 최대값 크기가 인 배열
	}
}